{"ast":null,"code":"import _classCallCheck from \"/Users/pakchu/Desktop/React-Term-3/react/frontend-backend/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pakchu/Desktop/React-Term-3/react/frontend-backend/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pakchu/Desktop/React-Term-3/react/frontend-backend/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pakchu/Desktop/React-Term-3/react/frontend-backend/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pakchu/Desktop/React-Term-3/react/frontend-backend/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pakchu/Desktop/React-Term-3/react/frontend-backend/client/src/Components/Task.js\";\nimport React, { Component } from 'react';\nimport TaskList from './TaskList';\n\nvar Task =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Task, _Component);\n\n  function Task(props) {\n    var _this;\n\n    _classCallCheck(this, Task);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Task).call(this, props));\n\n    _this.handleDelete = function (id) {\n      _this.props.handleDelete(id);\n    };\n\n    _this.handleUpdateEdit = function (id, updatedTask) {\n      console.log(id);\n\n      _this.props.handleUpdateEdit(id, updatedTask);\n    };\n\n    _this.handleChecked = function (id) {\n      _this.props.handleChecked(id);\n    };\n\n    _this.state = {\n      toggle: false\n    };\n    return _this;\n  }\n\n  _createClass(Task, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var tasks = this.props.tasks;\n      var task = tasks.map(function (task, index) {\n        var checked = task.completed === true ? true : false;\n        return React.createElement(TaskList, {\n          checked: checked,\n          task: task,\n          key: task._id,\n          handleChecked: _this2.handleChecked,\n          handleUpdateEdit: _this2.handleUpdateEdit,\n          handleDelete: _this2.handleDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        style: {\n          margin: \"10px 50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, task));\n    }\n  }]);\n\n  return Task;\n}(Component);\n/*\n\nimport React, { Component } from 'react'\nimport TaskList from './TaskList';\n\n\nexport default class Task extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      toggle: false\n    }\n\n  }\n\n  handleEdit = (id) => {\n    this.setState({\n      toggle: !this.state.toggle\n    })\n  }\n\n  handleDelete = (id) => {\n\n  }\n  \n  handleChecked = (id) => {\n   this.props.handleChecked(id)\n  }\n\n  render() {\n    const tasks = this.props.tasks;\n    let task = tasks.map((task, index) => {\n      let checked = (task.completed === true ? true : false )\n      return (\n        <li className={`list-group-item ${(checked) ? \"list-group-item-danger completed\" : \"\"}`} key={task.id} >\n          <input type=\"button\" className=\"float-right btn btn-danger  btn-sm\" value=\"delete\" style={{textAlign: 'center', marginLeft: 5}} onClick={this.handleDelete.bind(this, task.id)} />\n          <input type=\"button\" className=\"float-right btn btn-info  btn-sm\" value=\"edit\" style={{textAlign: 'center'}} onClick={this.handleEdit.bind(this, task.id)} />\n          <input type=\"checkbox\" style={{margin: \"7px 5px\"}} className=\"float-right\" checked={checked} onChange={this.handleChecked.bind(this, task.id)} />\n          {this.state.toggle ? '' : task.todo}\n        </li>\n      )\n    })\n\n    return (\n      <div style={{margin: \"10px 50px\"}}>\n        <ul className=\"list-group\">\n          {task}\n        </ul>\n      </div>\n    )\n  }\n}\n\n*/\n\n\nexport { Task as default };","map":{"version":3,"sources":["/Users/pakchu/Desktop/React-Term-3/react/frontend-backend/client/src/Components/Task.js"],"names":["React","Component","TaskList","Task","props","handleDelete","id","handleUpdateEdit","updatedTask","console","log","handleChecked","state","toggle","tasks","task","map","index","checked","completed","_id","margin"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;;IAGqBC,I;;;;;AAEnB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;;AADiB,UASnBC,YATmB,GASJ,UAACC,EAAD,EAAQ;AACrB,YAAKF,KAAL,CAAWC,YAAX,CAAwBC,EAAxB;AACD,KAXkB;;AAAA,UAanBC,gBAbmB,GAaA,UAACD,EAAD,EAAKE,WAAL,EAAqB;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;;AACD,YAAKF,KAAL,CAAWG,gBAAX,CAA4BD,EAA5B,EAAgCE,WAAhC;AACA,KAhBkB;;AAAA,UAkBnBG,aAlBmB,GAkBH,UAACL,EAAD,EAAQ;AACvB,YAAKF,KAAL,CAAWO,aAAX,CAAyBL,EAAzB;AACA,KApBkB;;AAGjB,UAAKM,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAHiB;AAOlB;;;;6BAeQ;AAAA;;AACP,UAAMC,KAAK,GAAG,KAAKV,KAAL,CAAWU,KAAzB;AACA,UAAIC,IAAI,GAAGD,KAAK,CAACE,GAAN,CAAU,UAACD,IAAD,EAAOE,KAAP,EAAiB;AACpC,YAAIC,OAAO,GAAIH,IAAI,CAACI,SAAL,KAAmB,IAAnB,GAA0B,IAA1B,GAAiC,KAAhD;AACA,eACC,oBAAC,QAAD;AAAU,UAAA,OAAO,EAAED,OAAnB;AACU,UAAA,IAAI,EAAEH,IADhB;AAEU,UAAA,GAAG,EAAEA,IAAI,CAACK,GAFpB;AAGU,UAAA,aAAa,EAAE,MAAI,CAACT,aAH9B;AAIU,UAAA,gBAAgB,EAAE,MAAI,CAACJ,gBAJjC;AAKU,UAAA,YAAY,EAAE,MAAI,CAACF,YAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASD,OAXU,CAAX;AAaA,aACE;AAAK,QAAA,KAAK,EAAE;AAACgB,UAAAA,MAAM,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,IADH,CADF,CADF;AAOD;;;;EA9C+Bd,S;AAiDlC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAjDqBE,I","sourcesContent":["import React, { Component } from 'react'\nimport TaskList from './TaskList';\n\n\nexport default class Task extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      toggle: false\n    }\n\n  }\n\n  handleDelete = (id) => {\n    this.props.handleDelete(id)\n  }\n\n  handleUpdateEdit = (id, updatedTask) => {\n    console.log(id)\n   this.props.handleUpdateEdit(id, updatedTask)\n  }\n  \n  handleChecked = (id) => {\n   this.props.handleChecked(id)\n  }\n\n  render() {\n    const tasks = this.props.tasks;\n    let task = tasks.map((task, index) => {\n      let checked = (task.completed === true ? true : false )\n      return (\n       <TaskList checked={checked}\n                 task={task}\n                 key={task._id}\n                 handleChecked={this.handleChecked}\n                 handleUpdateEdit={this.handleUpdateEdit}\n                 handleDelete={this.handleDelete}\n       />\n      )\n    })\n\n    return (\n      <div style={{margin: \"10px 50px\"}}>\n        <ul className=\"list-group\">\n          {task}\n        </ul>\n      </div>\n    )\n  }\n}\n\n/*\n\nimport React, { Component } from 'react'\nimport TaskList from './TaskList';\n\n\nexport default class Task extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      toggle: false\n    }\n\n  }\n\n  handleEdit = (id) => {\n    this.setState({\n      toggle: !this.state.toggle\n    })\n  }\n\n  handleDelete = (id) => {\n\n  }\n  \n  handleChecked = (id) => {\n   this.props.handleChecked(id)\n  }\n\n  render() {\n    const tasks = this.props.tasks;\n    let task = tasks.map((task, index) => {\n      let checked = (task.completed === true ? true : false )\n      return (\n        <li className={`list-group-item ${(checked) ? \"list-group-item-danger completed\" : \"\"}`} key={task.id} >\n          <input type=\"button\" className=\"float-right btn btn-danger  btn-sm\" value=\"delete\" style={{textAlign: 'center', marginLeft: 5}} onClick={this.handleDelete.bind(this, task.id)} />\n          <input type=\"button\" className=\"float-right btn btn-info  btn-sm\" value=\"edit\" style={{textAlign: 'center'}} onClick={this.handleEdit.bind(this, task.id)} />\n          <input type=\"checkbox\" style={{margin: \"7px 5px\"}} className=\"float-right\" checked={checked} onChange={this.handleChecked.bind(this, task.id)} />\n          {this.state.toggle ? '' : task.todo}\n        </li>\n      )\n    })\n\n    return (\n      <div style={{margin: \"10px 50px\"}}>\n        <ul className=\"list-group\">\n          {task}\n        </ul>\n      </div>\n    )\n  }\n}\n\n*/"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/pakchu/Desktop/React-Term-3/react/frontend-backend/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pakchu/Desktop/React-Term-3/react/frontend-backend/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pakchu/Desktop/React-Term-3/react/frontend-backend/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pakchu/Desktop/React-Term-3/react/frontend-backend/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pakchu/Desktop/React-Term-3/react/frontend-backend/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pakchu/Desktop/React-Term-3/react/frontend-backend/client/src/Components/TaskList.js\";\nimport React, { Component } from 'react';\n\nvar TaskList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskList, _Component);\n\n  function TaskList(props) {\n    var _this;\n\n    _classCallCheck(this, TaskList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaskList).call(this, props));\n\n    _this.handleEdit = function () {\n      _this.setState({\n        toggle: !_this.state.toggle\n      });\n    };\n\n    _this.handleUpdateEdit = function (id) {\n      _this.setState({\n        currentState: _this.refs.updatedText.value\n      }, function () {\n        _this.props.handleUpdateEdit(id, _this.state.currentState);\n      });\n    };\n\n    _this.handleDelete = function (id) {\n      _this.props.handleDelete(id);\n    };\n\n    _this.handleChecked = function (id) {\n      _this.props.handleChecked(id);\n    };\n\n    _this.state = {\n      toggle: false,\n      currentState: ''\n    };\n    return _this;\n  }\n\n  _createClass(TaskList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        currentState: this.props.task.todo\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"li\", {\n        className: \"list-group-item \".concat(this.props.checked ? \"list-group-item-danger completed\" : \"\"),\n        key: this.props.task.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        className: \"float-right btn btn-danger  btn-sm\",\n        value: \"delete\",\n        style: {\n          textAlign: 'center',\n          marginLeft: 5\n        },\n        onClick: this.handleDelete.bind(this, this.props.task.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"button\",\n        className: \"float-right btn btn-info  btn-sm\",\n        value: \"edit\",\n        style: {\n          textAlign: 'center'\n        },\n        onClick: this.handleEdit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        style: {\n          margin: \"7px 5px\"\n        },\n        className: \"float-right\",\n        checked: this.props.checked,\n        onChange: this.handleChecked.bind(this, this.props.task.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), this.state.toggle ? React.createElement(\"input\", {\n        value: this.state.currentState,\n        type: \"text\",\n        ref: \"updatedText\",\n        onChange: this.handleUpdateEdit.bind(this, this.props.task.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }) : this.props.task.todo);\n    }\n  }]);\n\n  return TaskList;\n}(Component);\n/*\n\nimport React, { Component } from 'react'\n\nexport default class TaskList extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      toggle: false\n    }\n\n  }\n\n  handleEdit = (id) => {\n    this.setState({\n      toggle: !this.state.toggle\n    })\n  }\n\n  handleDelete = (id) => {\n\n  }\n  \n  handleChecked = (id) => {\n   this.props.handleChecked(id)\n  }\n\n  render() {\n\n    let task = [];\n\n    if (this.state.toggle) {\n      task = (\n        <li className={`list-group-item ${(this.props.checked) ? \"list-group-item-danger completed\" : \"\"}`} key={this.props.task.id} >\n          <input type=\"button\" className=\"float-right btn btn-danger  btn-sm\" value=\"delete\" style={{textAlign: 'center', marginLeft: 5}} onClick={this.handleDelete.bind(this, this.props.task.id)} />\n          <input type=\"button\" className=\"float-right btn btn-info  btn-sm\" value=\"edit\" style={{textAlign: 'center'}} onClick={this.handleEdit.bind(this, this.props.task.id)} />\n          <input type=\"checkbox\" style={{margin: \"7px 5px\"}} className=\"float-right\" checked={this.props.checked} onChange={this.handleChecked.bind(this, this.props.task.id)} />\n        {this.props.task.todo}\n       </li>\n      )\n    } else {\n      task = (\n        <li className={`list-group-item ${(this.props.checked) ? \"list-group-item-danger completed\" : \"\"}`} key={this.props.task.id} >\n          <input type=\"button\" className=\"float-right btn btn-danger  btn-sm\" value=\"delete\" style={{textAlign: 'center', marginLeft: 5}} onClick={this.handleDelete.bind(this, this.props.task.id)} />\n          <input type=\"button\" className=\"float-right btn btn-info  btn-sm\" value=\"edit\" style={{textAlign: 'center'}} onClick={this.handleEdit.bind(this, this.props.task.id)} />\n          <input type=\"checkbox\" style={{margin: \"7px 5px\"}} className=\"float-right\" checked={this.props.checked} onChange={this.handleChecked.bind(this, this.props.task.id)} />\n          {this.props.task.todo}\n      </li>\n      )\n    }\n\n    return (\n     {task}\n    )\n  }\n}\n\n\n*/\n\n\nexport { TaskList as default };","map":{"version":3,"sources":["/Users/pakchu/Desktop/React-Term-3/react/frontend-backend/client/src/Components/TaskList.js"],"names":["React","Component","TaskList","props","handleEdit","setState","toggle","state","handleUpdateEdit","id","currentState","refs","updatedText","value","handleDelete","handleChecked","task","todo","checked","textAlign","marginLeft","bind","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport default class TaskList extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      toggle: false,\n      currentState: ''\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      currentState: this.props.task.todo\n    })\n  }\n\n \n  handleEdit = () => {\n    this.setState({\n      toggle: !this.state.toggle\n    })\n  }\n\n  handleUpdateEdit = (id) => {\n\n    this.setState({\n      currentState: this.refs.updatedText.value\n    }, () => {\n      this.props.handleUpdateEdit(id, this.state.currentState)\n    })\n  }\n\n  handleDelete = (id) => {\n   this.props.handleDelete(id)\n  }\n  \n  handleChecked = (id) => {\n   this.props.handleChecked(id)\n  }\n\n  render() {\n\n    return (\n      <li className={`list-group-item ${(this.props.checked) ? \"list-group-item-danger completed\" : \"\"}`} key={this.props.task.id} >\n        <input type=\"button\" className=\"float-right btn btn-danger  btn-sm\" value=\"delete\" style={{textAlign: 'center', marginLeft: 5}} onClick={this.handleDelete.bind(this, this.props.task.id)} />\n        <input type=\"button\" className=\"float-right btn btn-info  btn-sm\" value=\"edit\" style={{textAlign: 'center'}} onClick={this.handleEdit.bind(this)} />\n        <input type=\"checkbox\" style={{margin: \"7px 5px\"}} className=\"float-right\" checked={this.props.checked} onChange={this.handleChecked.bind(this, this.props.task.id)} />\n        \n        {this.state.toggle ? <input value={this.state.currentState} \n                                    type=\"text\" \n                                    ref=\"updatedText\"\n                                    onChange={this.handleUpdateEdit.bind(this, this.props.task.id)} /> : this.props.task.todo}\n     \n    </li>\n\n    )\n  }\n}\n\n\n/*\n\nimport React, { Component } from 'react'\n\nexport default class TaskList extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      toggle: false\n    }\n\n  }\n\n  handleEdit = (id) => {\n    this.setState({\n      toggle: !this.state.toggle\n    })\n  }\n\n  handleDelete = (id) => {\n\n  }\n  \n  handleChecked = (id) => {\n   this.props.handleChecked(id)\n  }\n\n  render() {\n\n    let task = [];\n\n    if (this.state.toggle) {\n      task = (\n        <li className={`list-group-item ${(this.props.checked) ? \"list-group-item-danger completed\" : \"\"}`} key={this.props.task.id} >\n          <input type=\"button\" className=\"float-right btn btn-danger  btn-sm\" value=\"delete\" style={{textAlign: 'center', marginLeft: 5}} onClick={this.handleDelete.bind(this, this.props.task.id)} />\n          <input type=\"button\" className=\"float-right btn btn-info  btn-sm\" value=\"edit\" style={{textAlign: 'center'}} onClick={this.handleEdit.bind(this, this.props.task.id)} />\n          <input type=\"checkbox\" style={{margin: \"7px 5px\"}} className=\"float-right\" checked={this.props.checked} onChange={this.handleChecked.bind(this, this.props.task.id)} />\n        {this.props.task.todo}\n       </li>\n      )\n    } else {\n      task = (\n        <li className={`list-group-item ${(this.props.checked) ? \"list-group-item-danger completed\" : \"\"}`} key={this.props.task.id} >\n          <input type=\"button\" className=\"float-right btn btn-danger  btn-sm\" value=\"delete\" style={{textAlign: 'center', marginLeft: 5}} onClick={this.handleDelete.bind(this, this.props.task.id)} />\n          <input type=\"button\" className=\"float-right btn btn-info  btn-sm\" value=\"edit\" style={{textAlign: 'center'}} onClick={this.handleEdit.bind(this, this.props.task.id)} />\n          <input type=\"checkbox\" style={{margin: \"7px 5px\"}} className=\"float-right\" checked={this.props.checked} onChange={this.handleChecked.bind(this, this.props.task.id)} />\n          {this.props.task.todo}\n      </li>\n      )\n    }\n\n    return (\n     {task}\n    )\n  }\n}\n\n\n*/"]},"metadata":{},"sourceType":"module"}